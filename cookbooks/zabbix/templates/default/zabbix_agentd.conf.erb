# Generated by Chef
# This is config file for zabbix_agentd
# in case the agent is started standalone from init.d (not via inetd).
#
# To get more information about ZABBIX, go http://www.zabbix.com

############ GENERAL PARAMETERS #################

# List of comma delimited IP addresses (or hostnames) of ZABBIX servers. 
# No spaces allowed. First entry is used for sending active checks.
# Note that hostnames must resolve hostname->IP address and
# IP address->hostname.

Server=<%= node[:zabbix][:server_addr] %>

# Server port for sending active checks

#ServerPort=10051

# Unique hostname. Required for active checks.

Hostname=<%= node.name %>

# Listen port. Default is 10050

#ListenPort=10050

# IP address to bind agent
# If missing, bind to all available IPs

#ListenIP=127.0.0.1

# Number of pre-forked instances of zabbix_agentd.
# Default value is 5
# This parameter must be between 1 and 16

StartAgents=5

# How often refresh list of active checks. 2 minutes by default.

#RefreshActiveChecks=120

# Disable active checks. The agent will work in passive mode listening server.

#DisableActive=1

# Enable remote commands for ZABBIX agent. By default remote commands disabled.

#EnableRemoteCommands=1

# Specifies debug level
# 0 - debug is not created
# 1 - critical information
# 2 - error information
# 3 - warnings
# 4 - information (default)
# 5 - for debugging (produces lots of information)

DebugLevel=4

# Name of PID file

PidFile=/var/run/zabbix-agent/zabbix_agentd.pid

# Name of log file.
# If not set, syslog will be used

LogFile=/var/log/zabbix-agent/zabbix_agentd.log

# Maximum size of log file in MB. Set to 0 to disable automatic log rotation.
#LogFileSize=1

# Spend no more than Timeout seconds on processing
# Must be between 1 and 30

Timeout=30

####### USER-DEFINED MONITORED PARAMETERS #######
# Format: UserParameter=<key>,<shell command>
# Note that shell command must not return empty string or EOL only
#UserParameter=system.test,who|wc -l

### Set of parameter for monitoring MySQL server (v3.23.42 and later)
### Change -u<username> and add -p<password> if required
### create user 'zabbix'@'localhost' identified by 'P@ssw0rd';
UserParameter=mysql.ping,mysqladmin -uzabbix -pP@ssw0rd ping|grep alive|wc -l
UserParameter=mysql.uptime,mysqladmin -uzabbix -pP@ssw0rd status|cut -f2 -d":"|cut -f1 -d"T"
UserParameter=mysql.threads,mysqladmin -uzabbix -pP@ssw0rd status|cut -f3 -d":"|cut -f1 -d"Q"
UserParameter=mysql.questions,mysqladmin  -uzabbix -pP@ssw0rdstatus|cut -f4 -d":"|cut -f1 -d"S"
UserParameter=mysql.slowqueries,mysqladmin -uzabbix -pP@ssw0rd status|cut -f5 -d":"|cut -f1 -d"O"
UserParameter=mysql.qps,mysqladmin -uzabbix -pP@ssw0rd status|cut -f9 -d":"
UserParameter=mysql.version,mysql -V

### Set of parameter for monitoring Nginx server
UserParameter=nginx.accepts,GET localhost/nginx-status | sed '3q;d' | cut -f2 -d " "
UserParameter=nginx.handled,GET localhost/nginx-status | sed '3q;d' | cut -f3 -d " "
UserParameter=nginx.requests,GET localhost/nginx-status | sed '3q;d' | cut -f4 -d " "
UserParameter=nginx.connections.active,GET localhost/nginx-status | sed '1q;d' | cut -f2 -d":"
UserParameter=nginx.connections.reading,GET localhost/nginx-status | sed '4q;d' | cut -f2 -d " "
UserParameter=nginx.connections.writing,GET localhost/nginx-status | sed '4q;d' | cut -f4 -d " "
UserParameter=nginx.connections.waiting,GET localhost/nginx-status | sed '4q;d' | cut -f6 -d " "

### Set of parameter for monitoring uwsgi
UserParameter=uwsgi.processes,ps -e | grep uwsgi | wc -l
UserParameter=uwsgi.load,nc 127.0.0.1 40000 | grep load | cut -f2 -d":" | cut -f1 -d","
UserParameter=uwsgi.listenqueue,nc 127.0.0.1 40000 | grep listen_queue | cut -f2 -d":" | cut -f1 -d","

### Set of parameter for monitoring rabbitMQ
UserParameter=rabbitmq.messages,sudo rabbitmqctl -p /beluga list_queues messages | awk '{ sum += $1 } END { print sum }'
UserParameter=rabbitmq.messages_ready,sudo rabbitmqctl -p /beluga list_queues messages_ready | awk '{ sum += $1 } END { print sum }'
UserParameter=rabbitmq.messages_unacknowledged,sudo rabbitmqctl -p /beluga list_queues  messages_unacknowledged | awk '{ sum += $1 } END { print sum }'
UserParameter=rabbitmq.consumers,sudo rabbitmqctl -p /beluga list_queues consumers | awk '{ sum += $1 } END { print sum }'
UserParameter=rabbitmq.recv,sudo rabbitmqctl -p /beluga list_connections recv_cnt | awk '{ sum += $1 } END { print sum }'
UserParameter=rabbitmq.send,sudo rabbitmqctl -p /beluga list_connections send_cnt | awk '{ sum += $1 } END { print sum }'

### Set of parameter for monitoring redis
###UserParameter=redis.mem_used,redis-cli info | grep used_memory: | cut -f2 -d":"
###UserParameter=redis.mem_frag_ratio,redis-cli info | grep mem_fragmentation_ratio | cut -f2 -d":"
UserParameter=redis.stat[*],redis-cli info | grep "$1:" | cut -d":" -f2

### Set of parameter for mongodb
UserParameter=mongodb.mem_virtual,mongo --eval "printjson(db.serverStatus())" | grep virtual | cut -f2 -d":" | cut -f1 -d","
UserParameter=mongodb.mem_mapped,mongo --eval "printjson(db.serverStatus())" | grep \"mapped\" | cut -f2 -d":" | cut -f1 -d","
UserParameter=mongodb.insert,mongo --eval "printjson(db.serverStatus())" | grep insert | cut -f2 -d":" | cut -f1 -d","
UserParameter=mongodb.query,mongo --eval "printjson(db.serverStatus())" | grep query | cut -f2 -d":" | cut -f1 -d","
UserParameter=mongodb.update,mongo --eval "printjson(db.serverStatus())" | grep update | cut -f2 -d":" | cut -f1 -d","
UserParameter=mongodb.delete,mongo --eval "printjson(db.serverStatus())" | grep delete | cut -f2 -d":" | cut -f1 -d","

### Set of parameter for hadoop master
UserParameter=hadoop.namenode_proc,sudo jps | grep NameNode | wc -l
UserParameter=hadoop.secondarynamenode_proc,sudo jps | grep SecondaryNameNode | wc -l
UserParameter=hadoop.datanode_proc,sudo jps | grep DataNode | wc -l
UserParameter=hadoop.jobtracker_proc,sudo jps | grep JobTracker | wc -l
UserParameter=hadoop.tasktracker_proc,sudo jps | grep TaskTracker | wc -l
UserParameter=hadoop.zookeeper_proc,sudo jps | grep QuorumPeerMain | wc -l
UserParameter=hadoop.hbase_proc,sudo jps | grep HMaster | wc -l
UserParameter=hadoop.hbase_region_proc,sudo jps | grep HRegionServer | wc -l
UserParameter=hadoop.thrift_proc,sudo jps | grep ThriftServer | wc -l

UserParameter=hadoop.hdfs_usage,sudo -u hdfs hadoop dfsadmin -report | grep -m 1 Used% | cut -f3 -d" " | tr -d "%"
UserParameter=hadoop.total_node,sudo -u hdfs hadoop dfsadmin -report | grep Datanodes | cut -f4 -d" " | tr -d "("
UserParameter=hadoop.dead_node,sudo -u hdfs hadoop dfsadmin -report | grep Datanodes | cut -f6 -d" "
UserParameter=hadoop.running_jobs,hadoop job -list | grep running | cut -f1 -d" "

### Set of parameter for hbase, hive
# monitor hbase will influnce the system
#UserParameter=hbase.total_servers,echo status | hbase shell | grep servers | cut -f1 -d" "
#UserParameter=hbase.dead_servers,echo status | hbase shell | grep servers | cut -f3 -d" "
#UserParameter=hbase.average_load,echo status | hbase shell | grep servers | cut -f5 -d" "

# 0 for running, 1 for not running
UserParameter=hive.server_status,sudo service hadoop-hive-server status | grep not | wc -l
UserParameter=hive.metastore_status,sudo service hadoop-hive-metastore status | grep not | wc -l

### Set of parameter for hadoop flume
UserParameter=flume.master_status,sudo jps | grep FlumeMaster | wc -l
UserParameter=flume.collector_status,sudo jps | grep FlumeNode| wc -l
UserParameter=flume.agent_status,sudo jps | grep FlumeNode| wc -l
